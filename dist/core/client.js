"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("./config");
class ClientManager {
    static async Init(client) {
        await client.login(config_1.Config.BOT_TOKEN);
        this.Client = client;
        client.on("guildCreate", guild => {
            console.log(`New server joined: ${guild.name} (Id: ${guild.id}). This server has ${guild.memberCount} members!`);
        });
        client.on("ready", () => {
            console.log(`Bot has started, with ${client.users.size} users, in ${client.channels.size} channels of ${client.guilds.size} servers.`);
        });
    }
    static GetClient() {
        return new Promise((resolve, reject) => {
            setInterval(() => {
                if (this.Client !== null && this.Client !== undefined) {
                    resolve(this.Client);
                }
            }, 100);
        });
    }
    static GetUser(discordId) {
        return new Promise((resolve, reject) => {
            setInterval(() => {
                const user = this.Client.users.get(discordId);
                if (user !== null && user !== undefined) {
                    resolve(user);
                }
            }, 1);
            setTimeout(() => {
                resolve(null);
            }, 10000);
        });
    }
}
exports.ClientManager = ClientManager;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvcmUvY2xpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EscUNBQWtDO0FBR2xDLE1BQWEsYUFBYTtJQUdqQixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFjO1FBQ3JDLE1BQU0sTUFBTSxDQUFDLEtBQUssQ0FBQyxlQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLEVBQUU7WUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FDVCxzQkFBc0IsS0FBSyxDQUFDLElBQUksU0FBUyxLQUFLLENBQUMsRUFBRSxzQkFDL0MsS0FBSyxDQUFDLFdBQ1IsV0FBVyxDQUNaLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztRQUVILE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtZQUN0QixPQUFPLENBQUMsR0FBRyxDQUNULHlCQUF5QixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksY0FDeEMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUNsQixnQkFBZ0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFdBQVcsQ0FDOUMsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLE1BQU0sQ0FBQyxTQUFTO1FBQ3JCLE9BQU8sSUFBSSxPQUFPLENBQVMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDN0MsV0FBVyxDQUFDLEdBQUcsRUFBRTtnQkFDZixJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssU0FBUyxFQUFFO29CQUNyRCxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUN0QjtZQUNILENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNWLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBaUI7UUFDckMsT0FBTyxJQUFJLE9BQU8sQ0FBTyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUMzQyxXQUFXLENBQUMsR0FBRyxFQUFFO2dCQUNmLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDOUMsSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxTQUFTLEVBQUU7b0JBQ3ZDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDZjtZQUNILENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNOLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2QsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hCLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNaLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBOUNELHNDQThDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsaWVudCwgVXNlciwgQ29sbGVjdGlvbiB9IGZyb20gXCJkaXNjb3JkLmpzXCI7XG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiLi9jb25maWdcIjtcbmltcG9ydCB7IEJvdFByZXNlbmNlIH0gZnJvbSBcIi4vcHJlc2VuY2VcIjtcblxuZXhwb3J0IGNsYXNzIENsaWVudE1hbmFnZXIge1xuICBwcml2YXRlIHN0YXRpYyBDbGllbnQ6IENsaWVudDtcblxuICBwdWJsaWMgc3RhdGljIGFzeW5jIEluaXQoY2xpZW50OiBDbGllbnQpIHtcbiAgICBhd2FpdCBjbGllbnQubG9naW4oQ29uZmlnLkJPVF9UT0tFTik7XG4gICAgdGhpcy5DbGllbnQgPSBjbGllbnQ7XG4gICAgY2xpZW50Lm9uKFwiZ3VpbGRDcmVhdGVcIiwgZ3VpbGQgPT4ge1xuICAgICAgY29uc29sZS5sb2coXG4gICAgICAgIGBOZXcgc2VydmVyIGpvaW5lZDogJHtndWlsZC5uYW1lfSAoSWQ6ICR7Z3VpbGQuaWR9KS4gVGhpcyBzZXJ2ZXIgaGFzICR7XG4gICAgICAgICAgZ3VpbGQubWVtYmVyQ291bnRcbiAgICAgICAgfSBtZW1iZXJzIWBcbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICBjbGllbnQub24oXCJyZWFkeVwiLCAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgYEJvdCBoYXMgc3RhcnRlZCwgd2l0aCAke2NsaWVudC51c2Vycy5zaXplfSB1c2VycywgaW4gJHtcbiAgICAgICAgICBjbGllbnQuY2hhbm5lbHMuc2l6ZVxuICAgICAgICB9IGNoYW5uZWxzIG9mICR7Y2xpZW50Lmd1aWxkcy5zaXplfSBzZXJ2ZXJzLmBcbiAgICAgICk7XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIEdldENsaWVudCgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2U8Q2xpZW50PigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLkNsaWVudCAhPT0gbnVsbCAmJiB0aGlzLkNsaWVudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcmVzb2x2ZSh0aGlzLkNsaWVudCk7XG4gICAgICAgIH1cbiAgICAgIH0sIDEwMCk7XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIEdldFVzZXIoZGlzY29yZElkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2U8VXNlcj4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBjb25zdCB1c2VyID0gdGhpcy5DbGllbnQudXNlcnMuZ2V0KGRpc2NvcmRJZCk7XG4gICAgICAgIGlmICh1c2VyICE9PSBudWxsICYmIHVzZXIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHJlc29sdmUodXNlcik7XG4gICAgICAgIH1cbiAgICAgIH0sIDEpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHJlc29sdmUobnVsbCk7XG4gICAgICB9LCAxMDAwMCk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==