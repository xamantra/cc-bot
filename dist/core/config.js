"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Config {
    static get BOT_NAME() {
        return process.env.BOT_NAME || require("../extras/env").env.BOT_NAME;
    }
    static get BOT_TOKEN() {
        return process.env.BOT_TOKEN || require("../extras/env").env.BOT_TOKEN;
    }
    static get COMMAND_PREFIX() {
        return (process.env.COMMAND_PREFIX || require("../extras/env").env.COMMAND_PREFIX);
    }
    static get MONGO_BASE() {
        return process.env.MONGO_BASE || require("../extras/env").env.MONGO_BASE;
    }
    static get MONGO_DATABASE() {
        return (process.env.MONGO_DATABASE || require("../extras/env").env.MONGO_DATABASE);
    }
    static get MAL_PROFILE_BASE() {
        return (process.env.MAL_PROFILE_BASE ||
            require("../extras/env").env.MAL_PROFILE_BASE);
    }
    static get MAL_ANIME_BASE() {
        return (process.env.MAL_ANIME_BASE || require("../extras/env").env.MAL_ANIME_BASE);
    }
    static get ANI_ANIME_BASE() {
        return (process.env.ANI_ANIME_BASE || require("../extras/env").env.ANI_ANIME_BASE);
    }
    static MAL_CW_LINK(username) {
        const base = process.env.MAL_CW_BASE || require("../extras/env").env.MAL_CW_BASE;
        return `${base}/${username}/load.json?status=1`;
    }
    static FIREBASE_CONFIG() {
        return (process.env.FIREBASE_CONFIG ||
            require("../extras/env").env.FIREBASE_CONFIG);
    }
    static get DBL_TOKEN() {
        return process.env.DBL_TOKEN || require("../extras/env").env.DBL_TOKEN;
    }
    static get DBL_BOT_LINK() {
        return (process.env.DBL_BOT_LINK || require("../extras/env").env.DBL_BOT_LINK);
    }
    static get QUEUE_REFRESH_RATE() {
        return Number(process.env.QUEUE_REFRESH_RATE ||
            require("../extras/env").env.QUEUE_REFRESH_RATE);
    }
}
exports.Config = Config;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvcmUvY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsTUFBYSxNQUFNO0lBQ1YsTUFBTSxLQUFLLFFBQVE7UUFDeEIsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztJQUN2RSxDQUFDO0lBQ00sTUFBTSxLQUFLLFNBQVM7UUFDekIsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztJQUN6RSxDQUFDO0lBRU0sTUFBTSxLQUFLLGNBQWM7UUFDOUIsT0FBTyxDQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxJQUFJLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUMxRSxDQUFDO0lBQ0osQ0FBQztJQUVNLE1BQU0sS0FBSyxVQUFVO1FBQzFCLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLElBQUksT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUM7SUFDM0UsQ0FBQztJQUVNLE1BQU0sS0FBSyxjQUFjO1FBQzlCLE9BQU8sQ0FDTCxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FDMUUsQ0FBQztJQUNKLENBQUM7SUFFTSxNQUFNLEtBQUssZ0JBQWdCO1FBQ2hDLE9BQU8sQ0FDTCxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQjtZQUM1QixPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUM5QyxDQUFDO0lBQ0osQ0FBQztJQUVNLE1BQU0sS0FBSyxjQUFjO1FBQzlCLE9BQU8sQ0FDTCxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FDMUUsQ0FBQztJQUNKLENBQUM7SUFFTSxNQUFNLEtBQUssY0FBYztRQUM5QixPQUFPLENBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLElBQUksT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQzFFLENBQUM7SUFDSixDQUFDO0lBRU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxRQUFnQjtRQUN4QyxNQUFNLElBQUksR0FDUixPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQztRQUN0RSxPQUFPLEdBQUcsSUFBSSxJQUFJLFFBQVEscUJBQXFCLENBQUM7SUFDbEQsQ0FBQztJQUVNLE1BQU0sQ0FBQyxlQUFlO1FBQzNCLE9BQU8sQ0FDTCxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWU7WUFDM0IsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQzdDLENBQUM7SUFDSixDQUFDO0lBRU0sTUFBTSxLQUFLLFNBQVM7UUFDekIsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztJQUN6RSxDQUFDO0lBRU0sTUFBTSxLQUFLLFlBQVk7UUFDNUIsT0FBTyxDQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxJQUFJLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUN0RSxDQUFDO0lBQ0osQ0FBQztJQUVNLE1BQU0sS0FBSyxrQkFBa0I7UUFDbEMsT0FBTyxNQUFNLENBQ1gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0I7WUFDNUIsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FDbEQsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQXhFRCx3QkF3RUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJRmlyZWJhc2VDb25maWcgfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9maXJlYmFzZS5jb25maWcuaW50ZXJmYWNlXCI7XG5leHBvcnQgY2xhc3MgQ29uZmlnIHtcbiAgcHVibGljIHN0YXRpYyBnZXQgQk9UX05BTUUoKSB7XG4gICAgcmV0dXJuIHByb2Nlc3MuZW52LkJPVF9OQU1FIHx8IHJlcXVpcmUoXCIuLi9leHRyYXMvZW52XCIpLmVudi5CT1RfTkFNRTtcbiAgfVxuICBwdWJsaWMgc3RhdGljIGdldCBCT1RfVE9LRU4oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuQk9UX1RPS0VOIHx8IHJlcXVpcmUoXCIuLi9leHRyYXMvZW52XCIpLmVudi5CT1RfVE9LRU47XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGdldCBDT01NQU5EX1BSRUZJWCgpOiBzdHJpbmcge1xuICAgIHJldHVybiAoXG4gICAgICBwcm9jZXNzLmVudi5DT01NQU5EX1BSRUZJWCB8fCByZXF1aXJlKFwiLi4vZXh0cmFzL2VudlwiKS5lbnYuQ09NTUFORF9QUkVGSVhcbiAgICApO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBnZXQgTU9OR09fQkFTRSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBwcm9jZXNzLmVudi5NT05HT19CQVNFIHx8IHJlcXVpcmUoXCIuLi9leHRyYXMvZW52XCIpLmVudi5NT05HT19CQVNFO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBnZXQgTU9OR09fREFUQUJBU0UoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gKFxuICAgICAgcHJvY2Vzcy5lbnYuTU9OR09fREFUQUJBU0UgfHwgcmVxdWlyZShcIi4uL2V4dHJhcy9lbnZcIikuZW52Lk1PTkdPX0RBVEFCQVNFXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZ2V0IE1BTF9QUk9GSUxFX0JBU0UoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gKFxuICAgICAgcHJvY2Vzcy5lbnYuTUFMX1BST0ZJTEVfQkFTRSB8fFxuICAgICAgcmVxdWlyZShcIi4uL2V4dHJhcy9lbnZcIikuZW52Lk1BTF9QUk9GSUxFX0JBU0VcbiAgICApO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBnZXQgTUFMX0FOSU1FX0JBU0UoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gKFxuICAgICAgcHJvY2Vzcy5lbnYuTUFMX0FOSU1FX0JBU0UgfHwgcmVxdWlyZShcIi4uL2V4dHJhcy9lbnZcIikuZW52Lk1BTF9BTklNRV9CQVNFXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZ2V0IEFOSV9BTklNRV9CQVNFKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIChcbiAgICAgIHByb2Nlc3MuZW52LkFOSV9BTklNRV9CQVNFIHx8IHJlcXVpcmUoXCIuLi9leHRyYXMvZW52XCIpLmVudi5BTklfQU5JTUVfQkFTRVxuICAgICk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIE1BTF9DV19MSU5LKHVzZXJuYW1lOiBzdHJpbmcpIHtcbiAgICBjb25zdCBiYXNlID1cbiAgICAgIHByb2Nlc3MuZW52Lk1BTF9DV19CQVNFIHx8IHJlcXVpcmUoXCIuLi9leHRyYXMvZW52XCIpLmVudi5NQUxfQ1dfQkFTRTtcbiAgICByZXR1cm4gYCR7YmFzZX0vJHt1c2VybmFtZX0vbG9hZC5qc29uP3N0YXR1cz0xYDtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgRklSRUJBU0VfQ09ORklHKCk6IElGaXJlYmFzZUNvbmZpZyB7XG4gICAgcmV0dXJuIChcbiAgICAgIHByb2Nlc3MuZW52LkZJUkVCQVNFX0NPTkZJRyB8fFxuICAgICAgcmVxdWlyZShcIi4uL2V4dHJhcy9lbnZcIikuZW52LkZJUkVCQVNFX0NPTkZJR1xuICAgICk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGdldCBEQkxfVE9LRU4oKSB7XG4gICAgcmV0dXJuIHByb2Nlc3MuZW52LkRCTF9UT0tFTiB8fCByZXF1aXJlKFwiLi4vZXh0cmFzL2VudlwiKS5lbnYuREJMX1RPS0VOO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBnZXQgREJMX0JPVF9MSU5LKCkge1xuICAgIHJldHVybiAoXG4gICAgICBwcm9jZXNzLmVudi5EQkxfQk9UX0xJTksgfHwgcmVxdWlyZShcIi4uL2V4dHJhcy9lbnZcIikuZW52LkRCTF9CT1RfTElOS1xuICAgICk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGdldCBRVUVVRV9SRUZSRVNIX1JBVEUoKSB7XG4gICAgcmV0dXJuIE51bWJlcihcbiAgICAgIHByb2Nlc3MuZW52LlFVRVVFX1JFRlJFU0hfUkFURSB8fFxuICAgICAgICByZXF1aXJlKFwiLi4vZXh0cmFzL2VudlwiKS5lbnYuUVVFVUVfUkVGUkVTSF9SQVRFXG4gICAgKTtcbiAgfVxufVxuIl19