"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const title_helper_1 = require("./../helpers/title.helper");
const media_status_1 = require("./../core/media.status");
class MediaHandler {
    static ExactMedia(mediaList, search) {
        const filteredMedia = [];
        mediaList.forEach(m => {
            if (title_helper_1.TitleHelper.Match(m.title, search)) {
                filteredMedia.push(m);
            }
        });
        return filteredMedia;
    }
    static OngoingMedia(mediaList) {
        const filteredMedia = [];
        mediaList.forEach(m => {
            if (media_status_1.MediaStatus.Ongoing(m)) {
                filteredMedia.push(m);
            }
        });
        return filteredMedia;
    }
    static UnreleasedMedia(mediaList) {
        const filteredMedia = [];
        mediaList.forEach(m => {
            if (media_status_1.MediaStatus.NotYetAired(m)) {
                filteredMedia.push(m);
            }
        });
        return filteredMedia;
    }
    static UnreleasedNoDateMedia(mediaList) {
        const filteredMedia = [];
        mediaList.forEach(m => {
            if (media_status_1.MediaStatus.NotYetAiredNoDate(m)) {
                filteredMedia.push(m);
            }
        });
        return filteredMedia;
    }
    static CompletedMedia(mediaList) {
        const filteredMedia = [];
        mediaList.forEach(m => {
            if (media_status_1.MediaStatus.Completed(m)) {
                filteredMedia.push(m);
            }
        });
        return filteredMedia;
    }
}
exports.MediaHandler = MediaHandler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVkaWEuaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oYW5kbGVycy9tZWRpYS5oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNERBQXdEO0FBQ3hELHlEQUFxRDtBQUdyRCxNQUFhLFlBQVk7SUFDaEIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFtQixFQUFFLE1BQWM7UUFDMUQsTUFBTSxhQUFhLEdBQWEsRUFBRSxDQUFDO1FBQ25DLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDcEIsSUFBSSwwQkFBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxFQUFFO2dCQUN0QyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3ZCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0lBRU0sTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFtQjtRQUM1QyxNQUFNLGFBQWEsR0FBYSxFQUFFLENBQUM7UUFDbkMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNwQixJQUFJLDBCQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMxQixhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3ZCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0lBRU0sTUFBTSxDQUFDLGVBQWUsQ0FBQyxTQUFtQjtRQUMvQyxNQUFNLGFBQWEsR0FBYSxFQUFFLENBQUM7UUFDbkMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNwQixJQUFJLDBCQUFXLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUM5QixhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3ZCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0lBRU0sTUFBTSxDQUFDLHFCQUFxQixDQUFDLFNBQW1CO1FBQ3JELE1BQU0sYUFBYSxHQUFhLEVBQUUsQ0FBQztRQUNuQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ3BCLElBQUksMEJBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDcEMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN2QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxjQUFjLENBQUMsU0FBbUI7UUFDOUMsTUFBTSxhQUFhLEdBQWEsRUFBRSxDQUFDO1FBQ25DLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDcEIsSUFBSSwwQkFBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDNUIsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN2QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztDQUNGO0FBbERELG9DQWtEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRpdGxlSGVscGVyIH0gZnJvbSBcIi4vLi4vaGVscGVycy90aXRsZS5oZWxwZXJcIjtcclxuaW1wb3J0IHsgTWVkaWFTdGF0dXMgfSBmcm9tIFwiLi8uLi9jb3JlL21lZGlhLnN0YXR1c1wiO1xyXG5pbXBvcnQgeyBJTWVkaWEgfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9wYWdlLmludGVyZmFjZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1lZGlhSGFuZGxlciB7XHJcbiAgcHVibGljIHN0YXRpYyBFeGFjdE1lZGlhKG1lZGlhTGlzdDogSU1lZGlhW10sIHNlYXJjaDogc3RyaW5nKSB7XHJcbiAgICBjb25zdCBmaWx0ZXJlZE1lZGlhOiBJTWVkaWFbXSA9IFtdO1xyXG4gICAgbWVkaWFMaXN0LmZvckVhY2gobSA9PiB7XHJcbiAgICAgIGlmIChUaXRsZUhlbHBlci5NYXRjaChtLnRpdGxlLCBzZWFyY2gpKSB7XHJcbiAgICAgICAgZmlsdGVyZWRNZWRpYS5wdXNoKG0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBmaWx0ZXJlZE1lZGlhO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHN0YXRpYyBPbmdvaW5nTWVkaWEobWVkaWFMaXN0OiBJTWVkaWFbXSkge1xyXG4gICAgY29uc3QgZmlsdGVyZWRNZWRpYTogSU1lZGlhW10gPSBbXTtcclxuICAgIG1lZGlhTGlzdC5mb3JFYWNoKG0gPT4ge1xyXG4gICAgICBpZiAoTWVkaWFTdGF0dXMuT25nb2luZyhtKSkge1xyXG4gICAgICAgIGZpbHRlcmVkTWVkaWEucHVzaChtKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZmlsdGVyZWRNZWRpYTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgVW5yZWxlYXNlZE1lZGlhKG1lZGlhTGlzdDogSU1lZGlhW10pIHtcclxuICAgIGNvbnN0IGZpbHRlcmVkTWVkaWE6IElNZWRpYVtdID0gW107XHJcbiAgICBtZWRpYUxpc3QuZm9yRWFjaChtID0+IHtcclxuICAgICAgaWYgKE1lZGlhU3RhdHVzLk5vdFlldEFpcmVkKG0pKSB7XHJcbiAgICAgICAgZmlsdGVyZWRNZWRpYS5wdXNoKG0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBmaWx0ZXJlZE1lZGlhO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHN0YXRpYyBVbnJlbGVhc2VkTm9EYXRlTWVkaWEobWVkaWFMaXN0OiBJTWVkaWFbXSkge1xyXG4gICAgY29uc3QgZmlsdGVyZWRNZWRpYTogSU1lZGlhW10gPSBbXTtcclxuICAgIG1lZGlhTGlzdC5mb3JFYWNoKG0gPT4ge1xyXG4gICAgICBpZiAoTWVkaWFTdGF0dXMuTm90WWV0QWlyZWROb0RhdGUobSkpIHtcclxuICAgICAgICBmaWx0ZXJlZE1lZGlhLnB1c2gobSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGZpbHRlcmVkTWVkaWE7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIENvbXBsZXRlZE1lZGlhKG1lZGlhTGlzdDogSU1lZGlhW10pIHtcclxuICAgIGNvbnN0IGZpbHRlcmVkTWVkaWE6IElNZWRpYVtdID0gW107XHJcbiAgICBtZWRpYUxpc3QuZm9yRWFjaChtID0+IHtcclxuICAgICAgaWYgKE1lZGlhU3RhdHVzLkNvbXBsZXRlZChtKSkge1xyXG4gICAgICAgIGZpbHRlcmVkTWVkaWEucHVzaChtKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZmlsdGVyZWRNZWRpYTtcclxuICB9XHJcbn1cclxuIl19